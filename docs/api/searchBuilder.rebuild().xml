<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="SearchBuilder">
	<name>searchBuilder.rebuild()</name>
	<summary>Rebuild the search to a given state</summary>
	<since>1.0.0</since>

	<type type="function">
		<signature>searchBuilder.rebuild( [state, [redraw]] )</signature>
		<description>Rebuilds the search to be the same as that provided by the `details` parameter.</description>
        <parameter type="SearchBuilder.Criteria" name="state" default="undefined">State to apply to SearchBuilder.</parameter>
        <parameter type="boolean" name="redraw" default="true" since="1.8.2">Indicate if the host DataTable should be redrawn or not.</parameter>
		<returns type="DataTables.Api">DataTables API instance</returns>
	</type>

	<description>
		This method provides the ability to set the search in SearchBuilder.

		`-api searchBuilder.rebuild()` takes one argument, it is an `-type SearchBuilder.Criteria` object which defines the search logic to be applied.
		
		If no argument is given, the search will be cleared.
	</description>

	<example title="Get the details of a Search:"><![CDATA[
var stored;
var table = new DataTable('#myTable', {
	layout: {
		top1: 'searchBuilder'
	}
});

$('#getDetails').on('click', function () {
	stored = table.searchBuilder.getDetails();
});

$('#revert').on('click', function () {
	table.searchBuilder.rebuild(stored);
});
]]></example>

<related type="api">searchBuilder.getDetails()</related>
<related type="init">searchBuilder.preDefined</related>

</dt-api>
